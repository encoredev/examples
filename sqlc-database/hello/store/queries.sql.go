// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: queries.sql

package store

import (
	"context"
)

const incrementMeetingCount = `-- name: IncrementMeetingCount :one
INSERT INTO
    people (name, count)
VALUES
    ($1 :: TEXT, 1)
ON CONFLICT (name) DO
UPDATE SET
    count = people.count + 1
RETURNING count
`

func (q *Queries) IncrementMeetingCount(ctx context.Context, name string) (int32, error) {
	row := q.db.QueryRowContext(ctx, incrementMeetingCount, name)
	var count int32
	err := row.Scan(&count)
	return count, err
}
