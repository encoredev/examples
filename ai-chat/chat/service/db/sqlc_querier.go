// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"context"

	"encore.dev/types/uuid"
)

type Querier interface {
	GetBotChannel(ctx context.Context, db DBTX, arg GetBotChannelParams) (uuid.UUID, error)
	GetChannel(ctx context.Context, db DBTX, id uuid.UUID) (*Channel, error)
	GetChannelByProviderID(ctx context.Context, db DBTX, arg GetChannelByProviderIDParams) (*Channel, error)
	GetChannelByProviderId(ctx context.Context, db DBTX, arg GetChannelByProviderIdParams) (*Channel, error)
	GetUser(ctx context.Context, db DBTX, id uuid.UUID) (*User, error)
	InsertMessage(ctx context.Context, db DBTX, arg InsertMessageParams) (*Message, error)
	InsertUser(ctx context.Context, db DBTX, arg InsertUserParams) (*User, error)
	LatestBotMessageInChannel(ctx context.Context, db DBTX, channelID uuid.UUID) (*Message, error)
	LatestMessageInChannel(ctx context.Context, db DBTX, channelID uuid.UUID) (*Message, error)
	ListBotsInChannel(ctx context.Context, db DBTX, channel uuid.UUID) ([]uuid.UUID, error)
	ListChannels(ctx context.Context, db DBTX) ([]*Channel, error)
	ListChannelsByProvider(ctx context.Context, db DBTX, provider Provider) ([]*Channel, error)
	ListChannelsWithBots(ctx context.Context, db DBTX) ([]*Channel, error)
	ListMessagesInChannel(ctx context.Context, db DBTX, channelID uuid.UUID) ([]*Message, error)
	ListMessagesInChannelAfter(ctx context.Context, db DBTX, arg ListMessagesInChannelAfterParams) ([]*Message, error)
	ListUsers(ctx context.Context, db DBTX) ([]*User, error)
	ListUsersByProvider(ctx context.Context, db DBTX, provider Provider) ([]*User, error)
	ListUsersInChannel(ctx context.Context, db DBTX, channelID uuid.UUID) ([]*User, error)
	RemoveBotChannel(ctx context.Context, db DBTX, arg RemoveBotChannelParams) (uuid.UUID, error)
	UpsertBotChannel(ctx context.Context, db DBTX, arg UpsertBotChannelParams) (uuid.UUID, error)
	UpsertChannel(ctx context.Context, db DBTX, arg UpsertChannelParams) (*Channel, error)
}

var _ Querier = (*Queries)(nil)
